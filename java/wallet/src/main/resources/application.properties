
server.port=8090
logging.level.org.springframework = debug
server.servlet.context-path=/wallet

## PostgreSQL
spring.jpa.database=POSTGRESQL
spring.sql.init.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/talic
spring.datasource.username=postgres
spring.datasource.password=pass@123

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.format_sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
## create OR create-drop options. drop table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.default_schema=talic

## To generate the database schema, we'll need to pass the schema generation properties to the persistence provider in use.
## To do this, we'll set the native JPA properties in our configuration file under the spring.jpa.properties prefix
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-source=metadata

## default connection pool
spring.datasource.hikari.connectionTimeout=200000
spring.datasource.hikari.maximumPoolSize=50
## maximum number of milliseconds that a client will wait for a connection
## spring.datasource.hikari.connection-timeout = 20000

## minimum number of idle connections maintained by HikariCP in a connection pool 
## spring.datasource.hikari.minimum-idle= 10

## maximum pool size
## spring.datasource.hikari.maximum-pool-size= 10

## maximum idle time for connection
## spring.datasource.hikari.idle-timeout=10000

## maximum lifetime in milliseconds of a connection in the pool after it is closed.
## spring.datasource.hikari.max-lifetime= 1000

## default auto-commit behavior.
## spring.datasource.hikari.auto-commit =true

## COMMON API PARAM
v1API=/api/v1

# Configure the Heap Size When Starting a Spring Boot Application
JAVA_OPTS="-Xms512m -Xmx1024m"
